<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>shaoxiang博客</title>
  
  <subtitle>我的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yangshaoxiang.github.io/"/>
  <updated>2017-12-24T15:56:57.386Z</updated>
  <id>https://yangshaoxiang.github.io/</id>
  
  <author>
    <name>yangshaoxiang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>linux下JavaWeb开发环境搭建</title>
    <link href="https://yangshaoxiang.github.io/2017/12/24/linux%E4%B8%8BJavaWeb%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https://yangshaoxiang.github.io/2017/12/24/linux下JavaWeb开发环境搭建/</id>
    <published>2017-12-24T15:20:21.000Z</published>
    <updated>2017-12-24T15:56:57.386Z</updated>
    
    <content type="html"><![CDATA[<h3 id="web开发基本环境安装配置"><a href="#web开发基本环境安装配置" class="headerlink" title="web开发基本环境安装配置"></a>web开发基本环境安装配置</h3><p>  JavaWeb开发中生产环境一般都为linux，因此我们要具有在linux环境下搭建基本的JavaWeb开发常用环境的能力，本篇博客介绍的是linux环境下jdk的安装，tomcat的安装，及mysql数据库的安装<br><a id="more"></a></p><h4 id="jdk的安装"><a href="#jdk的安装" class="headerlink" title="jdk的安装"></a>jdk的安装</h4><ol><li>到<a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="external">oracle官网下载</a>linux版本jdk安装包上传到/root目录下</li><li><p>解压，指定存放位置</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#解压jdk文件:  </span></div><div class="line">tar zxvf jdk-7u79-linux-x64.gz</div><div class="line"><span class="comment">#创建jdk的实际安装目录</span></div><div class="line">mkdir  /usr/<span class="built_in">local</span>/java</div><div class="line"><span class="comment">#将解压后的文件复制到安装目录中</span></div><div class="line">mv ./jdk1.7.0_79/ /usr/<span class="built_in">local</span>/java</div><div class="line"><span class="comment">#配置环境变量</span></div><div class="line">vi /etc/profile</div></pre></td></tr></table></figure></li><li><p>配置环境变量(注意要与自己的目录匹配)<br> 在profile文件中追加如下内容:</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">JAVA_HOME=/usr/local/java/jdk1.7.0_79</div><div class="line">PATH=$PATH:$JAVA_HOME/bin</div><div class="line">CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</div><div class="line"></div><div class="line">export JAVA_HOME</div><div class="line">export PATH</div><div class="line">export CLASSPATH</div></pre></td></tr></table></figure><p> 执行如下命令使环境变量生效:</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">source</span> /etc/profile</div></pre></td></tr></table></figure></li><li><p>测试是否成功</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">java</div><div class="line">javac</div><div class="line">java -version</div></pre></td></tr></table></figure></li></ol><h4 id="tomcat的安装"><a href="#tomcat的安装" class="headerlink" title="tomcat的安装"></a>tomcat的安装</h4><ol><li>将tomcat安装包上传到linux中</li><li><p>解压，转移</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 解压</span></div><div class="line">tar zfvx apache-tomcat-7.0.68.tar.gz</div><div class="line"><span class="comment"># 移动</span></div><div class="line">mv ./apache-tomcat-7.0.68 /usr/<span class="built_in">local</span>/tomcat</div><div class="line"><span class="comment">#启动</span></div><div class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/tomcat/bin</div><div class="line"> ./startup.sh</div></pre></td></tr></table></figure></li><li><p>添加防火墙端口(8080)</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">vi  /etc/sysconfig/iptables</div><div class="line"><span class="comment"># 在打开的文件中加入如下内容</span></div><div class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 8080 -j ACCEPT</div></pre></td></tr></table></figure></li><li><p>测试，访问<br>浏览器访问 <a href="http://ip_or__domain:8080/" target="_blank" rel="external">http://ip_or__domain:8080/</a></p></li></ol><h4 id="mysql的安装"><a href="#mysql的安装" class="headerlink" title="mysql的安装"></a>mysql的安装</h4><h5 id="下载与安装"><a href="#下载与安装" class="headerlink" title="下载与安装"></a>下载与安装</h5><ol><li><p><a href="https://dev.mysql.com/downloads/mysql/5.6.html#downloads" title="点击进入下载页" target="_blank" rel="external">下载mysql</a>的源码包，选项如下图所示:<br><img src="http://p0zwh057c.bkt.clouddn.com/blog/171218/K0ffI1dJ7H.png?imageslim" alt="mark">  </p></li><li><p>制作安装脚本<br>新建一个名称为mysql_install_offline.sh的文本文件，将下面的文本内容复制到新建的文本中,要注意文本中mysql_6_version是你下载的源码包的版本,dbrootpwd代表数据库密码</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div></pre></td><td class="code"><pre><div class="line"><span class="meta"> #</span><span class="bash">!/bin/bash</span></div><div class="line"></div><div class="line">yum install bison cmake gcc make ncurses perl wget</div><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash"> Notes: install mysql5.6 on centos</span></div><div class="line"><span class="meta">#</span><span class="bash"></span></div><div class="line">mysql_install_dir=/usr/mysql</div><div class="line">mysql_data_dir=/data/mysql</div><div class="line">mysql_6_version=5.6.38</div><div class="line">dbrootpwd=123456</div><div class="line"></div><div class="line">Mem=`free -m | awk '/Mem:/&#123;print $2&#125;'`</div><div class="line">Swap=`free -m | awk '/Swap:/&#123;print $2&#125;'`</div><div class="line"></div><div class="line">Install_MySQL-5-6()</div><div class="line">&#123;</div><div class="line">yum -y install make gcc-c++ cmake bison-devel  ncurses-devel</div><div class="line"><span class="meta">#</span><span class="bash">wget http://mirrors.sohu.com/mysql/MySQL-5.6/mysql-<span class="variable">$&#123;mysql_6_version&#125;</span>.tar.gz</span></div><div class="line"></div><div class="line">id -u mysql &gt;/dev/null 2&gt;&amp;1</div><div class="line">[ $? -ne 0 ] &amp;&amp; useradd -M -s /sbin/nologin mysql</div><div class="line"></div><div class="line">mkdir -p $mysql_data_dir;chown mysql.mysql -R $mysql_data_dir</div><div class="line">tar zxf mysql-$&#123;mysql_6_version&#125;.tar.gz</div><div class="line">cd mysql-$mysql_6_version</div><div class="line">make clean</div><div class="line">[ ! -d "$mysql_install_dir" ] &amp;&amp; mkdir -p $mysql_install_dir</div><div class="line">cmake . -DCMAKE_INSTALL_PREFIX=$mysql_install_dir \</div><div class="line">-DMYSQL_DATADIR=$mysql_data_dir \</div><div class="line">-DSYSCONFDIR=/etc \</div><div class="line">-DWITH_INNOBASE_STORAGE_ENGINE=1 \</div><div class="line">-DWITH_PARTITION_STORAGE_ENGINE=1 \</div><div class="line">-DWITH_FEDERATED_STORAGE_ENGINE=1 \</div><div class="line">-DWITH_BLACKHOLE_STORAGE_ENGINE=1 \</div><div class="line">-DWITH_MYISAM_STORAGE_ENGINE=1 \</div><div class="line">-DWITH_INNOBASE_STORAGE_ENGINE=1 \</div><div class="line">-DENABLED_LOCAL_INFILE=1 \</div><div class="line">-DENABLE_DTRACE=0 \</div><div class="line">-DEXTRA_CHARSETS=all \</div><div class="line">-DDEFAULT_CHARSET=utf8mb4 \</div><div class="line">-DDEFAULT_COLLATION=utf8mb4_general_ci \</div><div class="line">-DWITH_EMBEDDED_SERVER=1 \</div><div class="line"></div><div class="line">make -j `grep processor /proc/cpuinfo | wc -l`</div><div class="line">make install</div><div class="line"></div><div class="line">if [ -d "$mysql_install_dir/support-files" ];then</div><div class="line">    echo "$&#123;CSUCCESS&#125;MySQL install successfully! $&#123;CEND&#125;"</div><div class="line">    cd ..</div><div class="line">    rm -rf mysql-$mysql_6_version</div><div class="line">else</div><div class="line">    rm -rf $mysql_install_dir</div><div class="line">    echo "$&#123;CFAILURE&#125;MySQL install failed, Please contact the author! $&#123;CEND&#125;"</div><div class="line">    kill -9 $$</div><div class="line">fi</div><div class="line"></div><div class="line">/bin/cp $mysql_install_dir/support-files/mysql.server /etc/init.d/mysqld</div><div class="line">chmod +x /etc/init.d/mysqld</div><div class="line">chkconfig mysqld on</div><div class="line">cd ..</div><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash"> my.cf</span></div><div class="line">[ -d "/etc/mysql" ] &amp;&amp; /bin/mv /etc/mysql&#123;,_bk&#125;</div><div class="line">cat &gt; /etc/my.cnf &lt;&lt; EOF</div><div class="line">[client]</div><div class="line">port = 3306</div><div class="line">socket = /tmp/mysql.sock</div><div class="line">default-character-set = utf8mb4</div><div class="line"></div><div class="line">[mysqld]</div><div class="line">port = 3306</div><div class="line">socket = /tmp/mysql.sock</div><div class="line"></div><div class="line">basedir = $mysql_install_dir</div><div class="line">datadir = $mysql_data_dir</div><div class="line">pid-file = $mysql_data_dir/mysql.pid</div><div class="line">user = mysql</div><div class="line">bind-address = 0.0.0.0</div><div class="line">server-id = 1</div><div class="line"></div><div class="line">init-connect = 'SET NAMES utf8mb4'</div><div class="line">character-set-server = utf8mb4</div><div class="line"></div><div class="line">skip-name-resolve</div><div class="line">skip-external-locking</div><div class="line"><span class="meta">#</span><span class="bash">skip-networking</span></div><div class="line">back_log = 300</div><div class="line"></div><div class="line">max_connections = 1000</div><div class="line">max_connect_errors = 6000</div><div class="line">open_files_limit = 65535</div><div class="line">table_open_cache = 128</div><div class="line">max_allowed_packet = 4M</div><div class="line">binlog_cache_size = 1M</div><div class="line">max_heap_table_size = 8M</div><div class="line">tmp_table_size = 16M</div><div class="line"></div><div class="line">read_buffer_size = 2M</div><div class="line">read_rnd_buffer_size = 8M</div><div class="line">sort_buffer_size = 8M</div><div class="line">join_buffer_size = 8M</div><div class="line">key_buffer_size = 4M</div><div class="line">thread_cache_size = 8</div><div class="line">query_cache_type = 1</div><div class="line">query_cache_size = 8M</div><div class="line">query_cache_limit = 2M</div><div class="line">ft_min_word_len = 4</div><div class="line">log_bin = mysql-bin</div><div class="line">binlog_format = mixed</div><div class="line">expire_logs_days = 10</div><div class="line">log_error = $mysql_data_dir/mysql-error.log</div><div class="line">slow_query_log = 1</div><div class="line">long_query_time = 1</div><div class="line"><span class="meta">#</span><span class="bash">slow_query_log_file = <span class="variable">$mysql_data_dir</span>/mysql-slow.log</span></div><div class="line">performance_schema = 0</div><div class="line">explicit_defaults_for_timestamp</div><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash">lower_case_table_names = 1</span></div><div class="line">default_storage_engine = InnoDB</div><div class="line"><span class="meta">#</span><span class="bash">default-storage-engine = MyISAM</span></div><div class="line">innodb_file_per_table = 1</div><div class="line">innodb_open_files = 500</div><div class="line">innodb_buffer_pool_size = 64M</div><div class="line">innodb_write_io_threads = 4</div><div class="line">innodb_read_io_threads = 4</div><div class="line">innodb_thread_concurrency = 0</div><div class="line">innodb_purge_threads = 1</div><div class="line">innodb_flush_log_at_trx_commit = 2</div><div class="line">innodb_log_buffer_size = 2M</div><div class="line">innodb_log_file_size = 32M</div><div class="line">innodb_log_files_in_group = 3</div><div class="line">innodb_max_dirty_pages_pct = 90</div><div class="line">innodb_lock_wait_timeout = 120</div><div class="line"></div><div class="line">bulk_insert_buffer_size = 8M</div><div class="line">myisam_sort_buffer_size = 8M</div><div class="line">myisam_max_sort_file_size = 10G</div><div class="line">myisam_repair_threads = 1</div><div class="line"></div><div class="line">interactive_timeout = 28800</div><div class="line">wait_timeout = 28800</div><div class="line"></div><div class="line">[mysqldump]</div><div class="line">quick</div><div class="line">max_allowed_packet = 16M</div><div class="line"></div><div class="line">[myisamchk]</div><div class="line">key_buffer_size = 8M</div><div class="line">sort_buffer_size = 8M</div><div class="line">read_buffer = 4M</div><div class="line">write_buffer = 4M</div><div class="line"></div><div class="line">EOF</div><div class="line"></div><div class="line">if [ $Mem -gt 1500 -a $Mem -le 2500 ];then</div><div class="line">    sed -i 's@^thread_cache_size.*@thread_cache_size = 16@' /etc/my.cnf</div><div class="line">    sed -i 's@^query_cache_size.*@query_cache_size = 16M@' /etc/my.cnf</div><div class="line">    sed -i 's@^myisam_sort_buffer_size.*@myisam_sort_buffer_size = 16M@' /etc/my.cnf</div><div class="line">    sed -i 's@^key_buffer_size.*@key_buffer_size = 16M@' /etc/my.cnf</div><div class="line">    sed -i 's@^innodb_buffer_pool_size.*@innodb_buffer_pool_size = 128M@' /etc/my.cnf</div><div class="line">    sed -i 's@^tmp_table_size.*@tmp_table_size = 32M@' /etc/my.cnf</div><div class="line">    sed -i 's@^table_open_cache.*@table_open_cache = 256@' /etc/my.cnf</div><div class="line">elif [ $Mem -gt 2500 -a $Mem -le 3500 ];then</div><div class="line">    sed -i 's@^thread_cache_size.*@thread_cache_size = 32@' /etc/my.cnf</div><div class="line">    sed -i 's@^query_cache_size.*@query_cache_size = 32M@' /etc/my.cnf</div><div class="line">    sed -i 's@^myisam_sort_buffer_size.*@myisam_sort_buffer_size = 32M@' /etc/my.cnf</div><div class="line">    sed -i 's@^key_buffer_size.*@key_buffer_size = 64M@' /etc/my.cnf</div><div class="line">    sed -i 's@^innodb_buffer_pool_size.*@innodb_buffer_pool_size = 512M@' /etc/my.cnf</div><div class="line">    sed -i 's@^tmp_table_size.*@tmp_table_size = 64M@' /etc/my.cnf</div><div class="line">    sed -i 's@^table_open_cache.*@table_open_cache = 512@' /etc/my.cnf</div><div class="line">elif [ $Mem -gt 3500 ];then</div><div class="line">    sed -i 's@^thread_cache_size.*@thread_cache_size = 64@' /etc/my.cnf</div><div class="line">    sed -i 's@^query_cache_size.*@query_cache_size = 64M@' /etc/my.cnf</div><div class="line">    sed -i 's@^myisam_sort_buffer_size.*@myisam_sort_buffer_size = 64M@' /etc/my.cnf</div><div class="line">    sed -i 's@^key_buffer_size.*@key_buffer_size = 256M@' /etc/my.cnf</div><div class="line">    sed -i 's@^innodb_buffer_pool_size.*@innodb_buffer_pool_size = 1024M@' /etc/my.cnf</div><div class="line">    sed -i 's@^tmp_table_size.*@tmp_table_size = 128M@' /etc/my.cnf</div><div class="line">    sed -i 's@^table_open_cache.*@table_open_cache = 1024@' /etc/my.cnf</div><div class="line">fi</div><div class="line"></div><div class="line"><span class="meta">$</span><span class="bash">mysql_install_dir/scripts/mysql_install_db --user=mysql --basedir=<span class="variable">$mysql_install_dir</span> --datadir=<span class="variable">$mysql_data_dir</span></span></div><div class="line"></div><div class="line">chown mysql.mysql -R $mysql_data_dir</div><div class="line">service mysqld start</div><div class="line">[ -z "`grep ^'export PATH=' /etc/profile`" ] &amp;&amp; echo "export PATH=$mysql_install_dir/bin:\$PATH" &gt;&gt; /etc/profile</div><div class="line">[ -n "`grep ^'export PATH=' /etc/profile`" -a -z "`grep $mysql_install_dir /etc/profile`" ] &amp;&amp; sed -i "s@^export PATH=\(.*\)@export PATH=$mysql_install_dir/bin:\1@" /etc/profile</div><div class="line"></div><div class="line">. /etc/profile</div><div class="line"></div><div class="line"><span class="meta">$</span><span class="bash">mysql_install_dir/bin/mysql -e <span class="string">"grant all privileges on *.* to root@'127.0.0.1' identified by \"<span class="variable">$dbrootpwd</span>\" with grant option;"</span></span></div><div class="line"><span class="meta">$</span><span class="bash">mysql_install_dir/bin/mysql -e <span class="string">"grant all privileges on *.* to root@'localhost' identified by \"<span class="variable">$dbrootpwd</span>\" with grant option;"</span></span></div><div class="line"><span class="meta">$</span><span class="bash">mysql_install_dir/bin/mysql -uroot -p<span class="variable">$dbrootpwd</span> -e <span class="string">"delete from mysql.user where Password='';"</span></span></div><div class="line"><span class="meta">$</span><span class="bash">mysql_install_dir/bin/mysql -uroot -p<span class="variable">$dbrootpwd</span> -e <span class="string">"delete from mysql.db where User='';"</span></span></div><div class="line"><span class="meta">$</span><span class="bash">mysql_install_dir/bin/mysql -uroot -p<span class="variable">$dbrootpwd</span> -e <span class="string">"delete from mysql.proxies_priv where Host!='localhost';"</span></span></div><div class="line"><span class="meta">$</span><span class="bash">mysql_install_dir/bin/mysql -uroot -p<span class="variable">$dbrootpwd</span> -e <span class="string">"drop database test;"</span></span></div><div class="line"><span class="meta">$</span><span class="bash">mysql_install_dir/bin/mysql -uroot -p<span class="variable">$dbrootpwd</span> -e <span class="string">"reset master;"</span></span></div><div class="line">rm -rf /etc/ld.so.conf.d/&#123;mysql,mariadb,percona&#125;*.conf</div><div class="line">echo "$mysql_install_dir/lib" &gt; mysql.conf</div><div class="line">/sbin/ldconfig</div><div class="line">service mysqld stop</div><div class="line">&#125;</div><div class="line">Install_MySQL-5-6</div></pre></td></tr></table></figure></li><li><p>将源码包及及脚本上传到linux中<br>例如我这里将两个文件上传到了/root中，关于如何上传，查看<a href="https://yangshaoxiang.github.io/2017/12/09/linux%E4%B8%8B%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B8%8B%E8%BD%BD/#more">上一篇博客</a></p></li><li><p>执行脚本安装mysql</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /root</div><div class="line"><span class="comment">#使脚本具有可执行的权限</span></div><div class="line">chmod +x mysql_install_offline.sh</div><div class="line"><span class="comment">#执行之前安装autoconf库，此包安装时会安装Data:Dumper模块</span></div><div class="line">yum -y install autoconf</div><div class="line"><span class="comment">#执行安装脚本</span></div><div class="line">./mysql_install_offline.sh</div></pre></td></tr></table></figure></li><li><p>添加mysql端口号(3306)到防火墙中</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">vi  /etc/sysconfig/iptables</div><div class="line"><span class="comment"># 在打开的文件中加入如下内容</span></div><div class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 3306 -j ACCEPT</div></pre></td></tr></table></figure></li></ol><h5 id="配置外网Navicat可访问"><a href="#配置外网Navicat可访问" class="headerlink" title="配置外网Navicat可访问"></a>配置外网Navicat可访问</h5><p>  如果按照以上步骤安装完成后，本地的Navicat无法连接，参考以下步骤</p><ol><li><p>确认开启mysql数据库的服务(解决连接报10038)<br> 在终端下输入：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/rc.d/init.d/mysqld status</div></pre></td></tr></table></figure><p>   查看MySQL状态，看看是否运行，若没有运行的话就输入如下命令初始化数据库：</p>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/rc.d/init.d/mysqld start</div></pre></td></tr></table></figure></li><li><p>无法使用数据库命令<br><code>mysql -u root -p</code> 此项报错 <code>-bash: mysql: command not found</code><br>这是类似于windows中的环境变量没有配置，执行linux命令默认会去/usr/local/bin下去找所以配置一个映射，操作步骤如下:</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/bin</div><div class="line">ln -fs /usr/<span class="built_in">local</span>/mysql/bin/mysql</div><div class="line"><span class="comment">#如果报usr/bin/mysql不存在，切换到usr/bin执行如下命令</span></div><div class="line">ln -fs /usr/mysql/bin/mysql</div></pre></td></tr></table></figure></li><li><p>解决连接报1130<br>ERROR 1130: Host xxx.xxx.xxx.xxx  is not allowed to connect to this MySQL server<br>猜想是无法给远程连接的用户权限问题，按如下方式操作:<br> 在本机登入mysql后，更改 “mysql” 数据库里的 “user” 表里的 “host” 项，从”localhost”改称’%’即可,命令如下:</p>   <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"># 以权限用户root登录</div><div class="line">mysql -u root -p</div><div class="line">#查看mysql库中的user表的host值（即可进行连接访问的主机/IP名称）</div><div class="line"><span class="keyword">use</span> mysql;</div><div class="line"><span class="keyword">select</span> host <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">user</span>=<span class="string">'root'</span>;</div><div class="line"># 如果已经有%则无需更新</div><div class="line"># 修改host值（以通配符%的内容增加主机/IP地址），当然也可以直接增加IP地址  </div><div class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> host = <span class="string">'%'</span> <span class="keyword">where</span> <span class="keyword">user</span> =<span class="string">'root'</span>;</div><div class="line"># 如果报Duplicate entry '%-root' for key 'PRIMARY'错说明表中已存在%，刷新下权限</div><div class="line"># 刷新MySQL的系统权限相关表</div><div class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</div><div class="line"># 再重新查看user表时，是否有修改</div><div class="line"><span class="keyword">select</span> host <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">user</span>=<span class="string">'root'</span>;</div></pre></td></tr></table></figure><p>重启mysql服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/rc.d/init.d/mysqld restart</div></pre></td></tr></table></figure><p>搞完上述3步后使用Navicat for MySQL链接，如果失败就继续上网查找其他解决方法吧</p><h3 id="web开发常用linux命令"><a href="#web开发常用linux命令" class="headerlink" title="web开发常用linux命令"></a>web开发常用linux命令</h3><h4 id="防火墙命令"><a href="#防火墙命令" class="headerlink" title="防火墙命令"></a>防火墙命令</h4><p>一般我们访问远程主机上的程序，如数据库，tomcat服务器，zookeeper等，如果未在防火墙中添加端口，可能无法访问，临时简单的解决方式就是关闭防火墙，这里简单介绍防火墙相关简单命令<br>永久性生效，重启后不会复原，命令如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"> <span class="comment"># 开启</span></div><div class="line">chkconfig iptables on</div><div class="line"> <span class="comment"># 关闭</span></div><div class="line">chkconfig iptables off</div></pre></td></tr></table></figure><p>即时生效，重启后复原,命令如下:</p><ol><li><p>查看防火墙状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service iptables status</div></pre></td></tr></table></figure></li><li><p>开启防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service iptables start</div></pre></td></tr></table></figure></li><li><p>关闭防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service iptables stop</div></pre></td></tr></table></figure></li></ol><h4 id="tomcat命令"><a href="#tomcat命令" class="headerlink" title="tomcat命令"></a>tomcat命令</h4><ol><li><p>查看日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 切换到tomcat安装主目录</span></div><div class="line"><span class="built_in">cd</span> tomcat</div><div class="line">tail -f  logs/catalina.out</div></pre></td></tr></table></figure></li><li><p>杀掉tomcat进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 8080代表tomcat的端口号 查看listen的进程号</span></div><div class="line">netstat -nap|grep 8080</div><div class="line"><span class="comment"># 杀掉进程 pid是listen的进程号</span></div><div class="line"><span class="built_in">kill</span> pid</div></pre></td></tr></table></figure></li></ol><h4 id="mysql相关命令"><a href="#mysql相关命令" class="headerlink" title="mysql相关命令"></a>mysql相关命令</h4><ol><li><p>mysql服务启动命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"> <span class="comment"># mysql服务启动/停止/重启</span></div><div class="line">/etc/rc.d/init.d/mysqld start/stop/restart</div></pre></td></tr></table></figure></li><li><p>运行sql文件</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># 登入数据库后 切换到数据库，执行sql文件</div><div class="line">source /path/xxx.sql</div></pre></td></tr></table></figure></li><li><p>导出数据库  </p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># mysqldump -u 用户名 -p 数据库名 &gt; 导出的文件名   </div><div class="line">mysqldump -u root -p db_name &gt; db_name.sql</div></pre></td></tr></table></figure></li><li><p>导出表  </p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># mysqldump -u 用户名 -p 数据库名 该数据库下的表名&gt; 导出的文件名   </div><div class="line">mysqldump -u root -p db_name  tablename&gt; tablename.sql</div></pre></td></tr></table></figure></li></ol></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;web开发基本环境安装配置&quot;&gt;&lt;a href=&quot;#web开发基本环境安装配置&quot; class=&quot;headerlink&quot; title=&quot;web开发基本环境安装配置&quot;&gt;&lt;/a&gt;web开发基本环境安装配置&lt;/h3&gt;&lt;p&gt;  JavaWeb开发中生产环境一般都为linux，因此我们要具有在linux环境下搭建基本的JavaWeb开发常用环境的能力，本篇博客介绍的是linux环境下jdk的安装，tomcat的安装，及mysql数据库的安装&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="https://yangshaoxiang.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https://yangshaoxiang.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>log4j使用</title>
    <link href="https://yangshaoxiang.github.io/2017/12/09/log4jj%E4%BD%BF%E7%94%A8/"/>
    <id>https://yangshaoxiang.github.io/2017/12/09/log4jj使用/</id>
    <published>2017-12-09T14:44:21.000Z</published>
    <updated>2017-12-10T14:46:11.191Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-配置效果"><a href="#1-配置效果" class="headerlink" title="1. 配置效果"></a>1. 配置效果</h3><p>下面的log4j日志配置最终能达到的效果是对于全局日志可以根据级别输入到对应级别的日志文件中，注意低级别的日志文件会同时包含高级别的日志信息，例如info级别的日志文件会包含info，warn，error信息，对于一些重要的模块，可以单独输出到独立的文件夹文件中，同时对单独模块也可以像全局日志那样根据日志级别输入到对应文件中 也可以配置该模块日志信息是否同时输入到全局日志中<br><a id="more"></a></p><h3 id="2-样板Log4j配置示例"><a href="#2-样板Log4j配置示例" class="headerlink" title="2. 样板Log4j配置示例"></a>2. 样板Log4j配置示例</h3><p>这段配置的效果是配置3个全局的输出目的地，分别输出到控制台，和两个文件中，控制台的输出级别是info，两个文件的输出级别分别是info和error，配置一个login(登录)模块的日志输出到文件中，并且配置该模块日志信息不输出到全局日志中，在该模块中日志同样按照级别输出到不同文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line">log4j.rootLogger=DEBUG,console, infofile, errorfile</div><div class="line"></div><div class="line">#日志文件输出目录</div><div class="line">basedir=$&#123;catalina.home&#125;/logs/basemvc</div><div class="line">#登录模块日志输出目录</div><div class="line">logindir=$&#123;basedir&#125;/login</div><div class="line"></div><div class="line">#控制台日志-输出info以上</div><div class="line">log4j.appender.console=org.apache.log4j.ConsoleAppender</div><div class="line">log4j.appender.console.Threshold=info</div><div class="line">log4j.appender.console.layout=org.apache.log4j.PatternLayout</div><div class="line">log4j.appender.console.layout.ConversionPattern=%d&#123;yyyy-MM-ddHH\:mm\:ss&#125;[%-5p]%m%n%n</div><div class="line"></div><div class="line">#文件中info级别以上日志</div><div class="line">log4j.appender.infofile=org.apache.log4j.DailyRollingFileAppender</div><div class="line">log4j.appender.infofile.Append=true</div><div class="line">log4j.appender.infofile.DatePattern=&apos;.&apos;yyyy-MM-dd</div><div class="line">log4j.appender.infofile.File=$&#123;basedir&#125;/info.log</div><div class="line">log4j.appender.infofile.Threshold=info</div><div class="line">log4j.appender.infofile.layout=org.apache.log4j.PatternLayout</div><div class="line">log4j.appender.infofile.layout.ConversionPattern=%d&#123;yyyy-MM-ddHH\:mm\:ss&#125;[%-5p]%m%n%n</div><div class="line"></div><div class="line">#文件中error级别以上日志</div><div class="line">log4j.appender.errorfile=org.apache.log4j.DailyRollingFileAppender</div><div class="line">log4j.appender.errorfile.Append=true</div><div class="line">log4j.appender.errorfile.DatePattern=&apos;.&apos;yyyy-MM-dd</div><div class="line">log4j.appender.errorfile.File=$&#123;basedir&#125;/error.log</div><div class="line">log4j.appender.errorfile.Threshold=ERROR</div><div class="line">log4j.appender.errorfile.layout=org.apache.log4j.PatternLayout</div><div class="line">log4j.appender.errorfile.layout.ConversionPattern=%d&#123;yyyy-MM-dd HH\:mm\:ss&#125; [%-5p] %m%n%n</div><div class="line"></div><div class="line">#--------------------以下login模块相关日志--------------------</div><div class="line">#login模块输出</div><div class="line">#INFO及以上级别的log进行输出</div><div class="line">log4j.logger.login=INFO,logininfofile,loginerrorfile</div><div class="line"></div><div class="line">#login模块文件中存储info级别以上日志        </div><div class="line">log4j.appender.logininfofile.Threshold=INFO</div><div class="line">#以文件类型输出</div><div class="line">log4j.appender.logininfofile=org.apache.log4j.DailyRollingFileAppender</div><div class="line">#输出路径</div><div class="line">log4j.appender.logininfofile.File=$&#123;logindir&#125;/info_login.log</div><div class="line">#配置文件输出的文件命名，这种格式文件会在凌晨生成一个文件，想在其他时间生成新文件可以查看DatePattern的相关配置</div><div class="line">log4j.appender.logininfofile.DatePattern=&apos;_&apos;yyyy-MM-dd&apos;.log&apos;</div><div class="line">#输出格式</div><div class="line">log4j.appender.logininfofile.layout=org.apache.log4j.PatternLayout</div><div class="line">log4j.appender.logininfofile.layout.ConversionPattern=%d %p [%c] - %m%n</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">#login模块文件中存储error级别以上日志</div><div class="line">log4j.appender.loginerrorfile.Threshold=ERROR</div><div class="line">#以文件类型输出</div><div class="line">log4j.appender.loginerrorfile=org.apache.log4j.DailyRollingFileAppender</div><div class="line">#输出路径</div><div class="line">log4j.appender.loginerrorfile.File=$&#123;logindir&#125;/error_login.log</div><div class="line">#配置文件输出的文件命名，这种格式文件会在凌晨生成一个文件，想在其他时间生成新文件可以查看DatePattern的相关配置</div><div class="line">log4j.appender.loginerrorfile.DatePattern=&apos;_&apos;yyyy-MM-dd&apos;.log&apos;</div><div class="line">#输出格式</div><div class="line">log4j.appender.loginerrorfile.layout=org.apache.log4j.PatternLayout</div><div class="line">log4j.appender.loginerrorfile.layout.ConversionPattern=%d %p [%c] - %m%n</div><div class="line"></div><div class="line">#设置这个子Logger输出日志不在父级别logger里面输出</div><div class="line">log4j.additivity.login=false</div><div class="line"></div><div class="line">#--------------------以上login模块相关日志--------------------</div></pre></td></tr></table></figure></p><h3 id="3-配置简要解释"><a href="#3-配置简要解释" class="headerlink" title="3. 配置简要解释"></a>3. 配置简要解释</h3><h4 id="3-1-关于全局日志的配置"><a href="#3-1-关于全局日志的配置" class="headerlink" title="3.1 关于全局日志的配置"></a>3.1 关于全局日志的配置</h4><ol><li><p>关于日志的输出级别<br> log4j日志级别分为OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL或者自定义的级别。Log4j建议只使用四个级别，优先级从高到低分别是 ERROR、WARN、INFO、DEBUG。通过在配置文件中配置，可以控制到应用程序中相应级别的日志信息的开关。比如在配置文件中定义了log4j.rootLogger为INFO级别，则应用程序中所有DEBUG级别的日志信息将不被打印出来，也是说大于等于的级别的日志才输出。</p></li><li><p>全局日志配置 log4j.rootLogger<br> 这个是用来定义日志全局的输出级别以及输出的目的地，这里我定义的是log4j.rootLogger=info, console, infofile, errorfile,这里定义了全局输出的日志为INFO级别，也就是说能输出的日志级别一定不低于INFO级别，即DEBUG级别的日志将不会输出，输出到哪呢?输出到紧接其后定义的目的地 console, infofile, errorfile，这个3个目的地可以随意命名，在每个目的地中可以具体细化日志的配置，即他们可以再次对日志的级别进行过滤，对日志输出格式进行细化，对日志输出端类型进行指定。</p></li><li><p>指定日志输出目的地中输出端 log4j.appender.目的地名称<br> 就是配置输出到这个目的地的日志，他是在控制台中输出，还是以文件的形式输出，如果以文件的形式输出，那么其文件产生时机是什么时候，目的地有如下几种配置:</p><blockquote><p>org.apache.log4j.ConsoleAppender（控制台）<br>org.apache.log4j.FileAppender（文件）<br>org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件）<br>org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件）<br>org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）  </p></blockquote></li><li><p>指定日志输出目的地中日志输出级别 log4j.appender.interceptor.Threshold<br>通过该属性可以指定目的地中日志输出的级别，相当于对全局配置的日志级别再次做一次过滤</p></li></ol><h4 id="3-2-关于单独模块日志配置"><a href="#3-2-关于单独模块日志配置" class="headerlink" title="3.2 关于单独模块日志配置"></a>3.2 关于单独模块日志配置</h4><ol><li><p>log4j.logger.login.模块名<br>这一句配置相当于新添了一个日志模块，他的值与rootLogger代表意义相同，即指定相对该模块下全局日志级别及对应的输出目的地，其余对应目的地的配置和全局日志相同</p></li><li><p>log4j.additivity.模块名<br>设置这个子Logger输出日志是否在父级别logger里面输出，true表示同时在父级的日志输出，这里的模块名可以换为模块下的目的地名称，效果是一样的</p></li></ol><h3 id="4-java中使用日志"><a href="#4-java中使用日志" class="headerlink" title="4. java中使用日志"></a>4. java中使用日志</h3><p>   对于在java中使用，单独日志模块要想独立输出获取日志对象时在方法参数中要传入模块名称，对于全局日志对象只需传入当前类的class对象即可，代码示例如下:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserAction</span> </span>&#123;</div><div class="line">    <span class="comment">//登录模块使用的日志对象</span></div><div class="line">    <span class="keyword">private</span> Logger loginLogger = Logger.getLogger(<span class="string">"login"</span>);</div><div class="line">    <span class="comment">//全局日志对象</span></div><div class="line">    <span class="keyword">private</span> Logger logger = Logger.getLogger(UserAction.class);</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">detail</span><span class="params">()</span></span>&#123;</div><div class="line">        logger.debug(<span class="string">"user_product----"</span>+<span class="string">"debug"</span>);</div><div class="line">        logger.info(<span class="string">"user_product----"</span>+<span class="string">"info"</span>);</div><div class="line">        logger.warn(<span class="string">"user_product----"</span>+<span class="string">"warn"</span>);</div><div class="line">        logger.error(<span class="string">"user_product----"</span>+<span class="string">"error"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">login</span><span class="params">()</span></span>&#123;</div><div class="line">        loginLogger.debug(<span class="string">"user_product----"</span>+<span class="string">"debug"</span>);</div><div class="line">        loginLogger.info(<span class="string">"user_product----"</span>+<span class="string">"info"</span>);</div><div class="line">        loginLogger.warn(<span class="string">"user_product----"</span>+<span class="string">"warn"</span>);</div><div class="line">        loginLogger.error(<span class="string">"user_product----"</span>+<span class="string">"error"</span>);</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-配置效果&quot;&gt;&lt;a href=&quot;#1-配置效果&quot; class=&quot;headerlink&quot; title=&quot;1. 配置效果&quot;&gt;&lt;/a&gt;1. 配置效果&lt;/h3&gt;&lt;p&gt;下面的log4j日志配置最终能达到的效果是对于全局日志可以根据级别输入到对应级别的日志文件中，注意低级别的日志文件会同时包含高级别的日志信息，例如info级别的日志文件会包含info，warn，error信息，对于一些重要的模块，可以单独输出到独立的文件夹文件中，同时对单独模块也可以像全局日志那样根据日志级别输入到对应文件中 也可以配置该模块日志信息是否同时输入到全局日志中&lt;br&gt;
    
    </summary>
    
      <category term="java" scheme="https://yangshaoxiang.github.io/categories/java/"/>
    
    
      <category term="日志" scheme="https://yangshaoxiang.github.io/tags/%E6%97%A5%E5%BF%97/"/>
    
      <category term="log4j" scheme="https://yangshaoxiang.github.io/tags/log4j/"/>
    
  </entry>
  
  <entry>
    <title>linux下文件上传下载</title>
    <link href="https://yangshaoxiang.github.io/2017/12/09/linux%E4%B8%8B%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B8%8B%E8%BD%BD/"/>
    <id>https://yangshaoxiang.github.io/2017/12/09/linux下文件上传下载/</id>
    <published>2017-12-09T14:44:21.000Z</published>
    <updated>2017-12-18T14:00:22.859Z</updated>
    
    <content type="html"><![CDATA[<h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><p>本篇博客主要介绍如何去链接远程的linux主机及如何实现本地与远程主机之间文件的上传下载操作，下面的linux系统是CentOS6.6<br><a id="more"></a></p><h4 id="链接远程linux主机"><a href="#链接远程linux主机" class="headerlink" title="链接远程linux主机"></a>链接远程linux主机</h4><p>  一般链接远程linux主机，如果电脑上没有安装类似SecureCRTPortable这种终端仿真程序，我们会用git的命令窗口使用命令去链接，但是这种方式不能保存链接的用户名和密码，下次还要重新输入链接信息，很麻烦，适合暂时的连一下，用一下，通常都会使用终端仿真程序，并保存相关链接信息。</p><h5 id="未安装终端仿真程序链接方式-命令"><a href="#未安装终端仿真程序链接方式-命令" class="headerlink" title="未安装终端仿真程序链接方式-命令"></a>未安装终端仿真程序链接方式-命令</h5><p>  在任意位置打开git命令窗口，输入如下命令即可<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh username@ip_or_domain</div></pre></td></tr></table></figure></p><p>  该命令中username代表linux登录用户的用户名，ip_or_domain代表linux主机的ip地址或ip所映射的域名，例如:<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh root@116.196.115.151</div></pre></td></tr></table></figure></p><p>  代表的含义是使用root用户链接116.196.115.151的远程主机<br>  之后，一般如果该账户设有密码，会在下一步提示输入链接密码，输入正确密码即可链接成功</p><h5 id="安装SecureCRTPortable链接"><a href="#安装SecureCRTPortable链接" class="headerlink" title="安装SecureCRTPortable链接"></a>安装SecureCRTPortable链接</h5><p>  本地电脑上有SecureCRTPortable这种终端仿真程序（直接浏览器搜索，一堆，本文使用版本为8.3），打开SecureCRTPortable，选择 文件(File)-&gt;快速连接(Quick Connect)，输入主机名和用户名，主机名就是远程linux主机的ip地址，用户名就是登陆的用户名，之后会弹出密码框，要求输入密码，成功后即可链接主机</p><h4 id="文件上传和下载"><a href="#文件上传和下载" class="headerlink" title="文件上传和下载"></a>文件上传和下载</h4><p> 大部分情况下，我们要在linux下安装的软件，或将要部署在linux环境服务器上的本地开发的应用，他们大部分情况下是在本地windows环境下的，这就涉及到如何将本地文件上传到linux系统中，还有就是在linux下修改一些配置文件非常的繁琐，一般对于比较大的配置文件可能会下载到本地修改，然后在上传覆盖，这就涉及到如何将linux上的文件下载到本地，这里介绍3种方式，个人推荐第三种rz/sz方式</p><h5 id="未安装任何的终端仿真程序-命令"><a href="#未安装任何的终端仿真程序-命令" class="headerlink" title="未安装任何的终端仿真程序-命令"></a>未安装任何的终端仿真程序-命令</h5><h6 id="命令上传"><a href="#命令上传" class="headerlink" title="命令上传:"></a>命令上传:</h6><p>  在本地打开要上传文件所在文件夹，打开该级文件夹下打开git命令窗口，输入如下命令：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp filename username@ip_or_domain:/target_directory/</div></pre></td></tr></table></figure></p><p>   该命令中filename代表要上传的文件名称，username代表linux登录用户的用户名，ip_or_domain代表linux主机的ip地址或ip所映射的域名，target_directory代表linux下要上传到的文件目录,例如:<br>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp test.sql root@116.196.115.151:/root/</div></pre></td></tr></table></figure></p><p>  代表的含义是将当前目录下的test.sql文件复制上传到116.196.115.151主机的root目录下,如果有密码之后输入密码。</p><h6 id="命令下载"><a href="#命令下载" class="headerlink" title="命令下载:"></a>命令下载:</h6><p>   基本和命令上传相同，在本地先切换到盛放下载文件的目录，在该目录下打开git窗口，输入如下命令<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp username@ip_or_domain:/target_directory/filename ~/</div></pre></td></tr></table></figure></p><p>   该命令中username代表linux登录用户的用户名，ip_or_domain代表linux主机的ip地址或ip所映射的域名，target_directory代表linux下要下载的文件目录，filename代表要下载的文件名称，例如：<br>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp root@116.196.115.151:/root/test.sql  ~/Desktop/</div></pre></td></tr></table></figure></p><p>   代表的含义是将主机root目录下的test.sql文件下载到本地windows的桌面上</p><h6 id="对于目录的上传下载"><a href="#对于目录的上传下载" class="headerlink" title="对于目录的上传下载"></a>对于目录的上传下载</h6><p>   scp命令后面紧接着加上 -r 即可，后面的路径到目录一级即可</p><h6 id="对于两台linux主机之间文件互相拷贝"><a href="#对于两台linux主机之间文件互相拷贝" class="headerlink" title="对于两台linux主机之间文件互相拷贝"></a>对于两台linux主机之间文件互相拷贝</h6><p>   将上述上传或下载命令文件路径部分，在路径前面加上username@ip_or_domain:的前缀即可</p><h5 id="SecureCRTPortable的sftp"><a href="#SecureCRTPortable的sftp" class="headerlink" title="SecureCRTPortable的sftp"></a>SecureCRTPortable的sftp</h5><h6 id="SecureCRTPortable的sftp上传下载公共操作步骤"><a href="#SecureCRTPortable的sftp上传下载公共操作步骤" class="headerlink" title="SecureCRTPortable的sftp上传下载公共操作步骤:"></a>SecureCRTPortable的sftp上传下载公共操作步骤:</h6><ol><li><a href="#安装SecureCRTPortable链接">使用SecureCRTPortable链接到主机</a></li><li>使用快捷键alt+p,进入sftp界面</li><li><p>切换到存放上传文件(要下载的文件)的目录(cd命令)</p><h6 id="SecureCRTPortable的sftp上传"><a href="#SecureCRTPortable的sftp上传" class="headerlink" title="SecureCRTPortable的sftp上传:"></a>SecureCRTPortable的sftp上传:</h6></li><li>直接将本地文件拖拽到sftp界面窗口中即可(像qq发送文件那样，注意尽量使用较高版本   的SecureCRT，否则可能不支持拖拽，例如7.0的版本在win7下可拖拽，win10下不行，8.3的版本都可以)</li><li><p>传输完成后使用ls命令查看当前目录是否有上传的文件(ll命令不可用)</p><h6 id="SecureCRTPortable的sftp下载"><a href="#SecureCRTPortable的sftp下载" class="headerlink" title="SecureCRTPortable的sftp下载:"></a>SecureCRTPortable的sftp下载:</h6><ol><li>使用如下命令将文件下载到本地<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 指定本地下载目录 这里指定为d盘</span></div><div class="line">lcd d:\</div><div class="line"><span class="comment"># 使用get命令下载，后面跟要下载的文件名称(要先切换到文件所在目录)</span></div><div class="line">get test.sql</div></pre></td></tr></table></figure></li></ol></li></ol><h5 id="SecureCRTPortable的Zmodem"><a href="#SecureCRTPortable的Zmodem" class="headerlink" title="SecureCRTPortable的Zmodem"></a>SecureCRTPortable的Zmodem</h5><p>在linux任意目录下输入rz，如果出现 -bash: rz: command not found 说明未安装Zmodem，如果弹出一个文件选择框则已经安装，查看如何使用即可</p><h6 id="安装Zmodem"><a href="#安装Zmodem" class="headerlink" title="安装Zmodem:"></a>安装Zmodem:</h6><p>方式一(简单):执行如下命令，完毕即可使用<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install lrzsz</div></pre></td></tr></table></figure></p><p>方式二(麻烦):执行如下一系列操作:</p><ol><li><p>下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 切换到下载目录</span></div><div class="line"><span class="built_in">cd</span> /tmp</div><div class="line"><span class="comment"># 下载</span></div><div class="line">wget http://www.ohse.de/uwe/releases/lrzsz-0.12.20.tar.gz</div></pre></td></tr></table></figure><p>如果出现 wget: command not found，执行下面命令安装wget</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install wget</div></pre></td></tr></table></figure><p>如果出现wget颁发证书过期用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget --no-check-certificate  http://www.ohse.de/uwe/releases/lrzsz-0.12.20.tar.gz</div></pre></td></tr></table></figure></li><li><p>解压安装及创建软连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">tar zxvf lrzsz-0.12.20.tar.gz &amp;&amp; <span class="built_in">cd</span> lrzsz-0.12.20</div><div class="line">./configure &amp;&amp; make &amp;&amp; make install</div></pre></td></tr></table></figure><p>如果报错:no acceptable cc found in $PATH<br>执行下面命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install gcc gcc-c++ gcc-g77</div></pre></td></tr></table></figure><p>上面安装过程默认把lsz和lrz安装到了/usr/local/bin/目录下，现在我们并不能直接使用，下面创建软链接，并命名为rz/sz：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /usr/bin</div><div class="line">ln -s /usr/<span class="built_in">local</span>/bin/lrz rz</div><div class="line">ln -s /usr/<span class="built_in">local</span>/bin/lsz sz</div></pre></td></tr></table></figure></li></ol><h6 id="使用Zmodem"><a href="#使用Zmodem" class="headerlink" title="使用Zmodem:"></a>使用Zmodem:</h6><p> 指定上传目录与下载目录<br> 上传目录：使用rz指令，进行上传操作时，弹出的对话框，会默认定位到该目录下。<br> 下载目录：使用sz指令，进行下载操作后，所下载的文件，默认下载到该目录中。<br> 打开SecureCRT软件 -&gt; Options -&gt; session options -&gt; X/Y/Zmodem 下可以设置上传和下载的目录<br> sz filename:发送文件到客户端,zmodem接收可以自行启动，例如：<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /root</div><div class="line">sz test.sql</div></pre></td></tr></table></figure></p><p> root下的test.sql文件会被发送到本地下载目录<br> rz :从客户端上传文件到linux服务端,输入该命令后会打开文件选择对话框(默认定位到上传目录)</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;基本操作&quot;&gt;&lt;a href=&quot;#基本操作&quot; class=&quot;headerlink&quot; title=&quot;基本操作&quot;&gt;&lt;/a&gt;基本操作&lt;/h3&gt;&lt;p&gt;本篇博客主要介绍如何去链接远程的linux主机及如何实现本地与远程主机之间文件的上传下载操作，下面的linux系统是CentOS6.6&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="https://yangshaoxiang.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https://yangshaoxiang.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Activemq的安装及启动</title>
    <link href="https://yangshaoxiang.github.io/2017/10/20/Activemq%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E5%90%AF%E5%8A%A8/"/>
    <id>https://yangshaoxiang.github.io/2017/10/20/Activemq的安装及启动/</id>
    <published>2017-10-19T17:05:08.000Z</published>
    <updated>2017-12-10T07:23:30.776Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-基本了解"><a href="#1-基本了解" class="headerlink" title="1. 基本了解"></a>1. 基本了解</h3><p>&emsp;&emsp;这一部分内容主要来源网络，这里整理归纳到博客中，阅读之后对ActiveMq有一个基本的认知和了解。<br> &emsp; <strong>1. ActiveMQ概念</strong><br>&emsp;&emsp;ActiveMQ是Apache推出的，一款开源的，完全支持JMS1.1和J2EE 1.4规范的JMSProvider实现的消息中间件（Message Oriented Middleware，MOM）。<br><a id="more"></a><br>&emsp; <strong>2. ActiveMQ作用</strong><br>&emsp;&emsp;最主要的功能就是：实现JMS Provider，用来帮助实现高可用、高性能、可伸缩、易用和安全的企业级面向消息服务的系统。</p><p>&emsp; <strong>3. ActiveMQ特点</strong></p><ul><li>完全支持JMS1.1和J2EE 1.4规范 （持久化，XA消息，事务)  </li><li>支持多种传送协议：in-VM,TCP,SSL,NIO,UDP,JGroups,JXTA  </li><li>可插拔的体系结构，可以灵活定制，如：消息存储方式、安全管理等  </li><li>很容易和Application Server集成使用</li><li>多种语言和协议编写客户端。语言: Java,C,C++,C#,Ruby,Perl,Python,PHP</li><li>从设计上保证了高性能的集群，客户端-服务器，点对点</li><li>可以很容易的和Spring结合使用</li><li>支持通过JDBC和journal提供高速的消息持久化</li></ul><h3 id="2-基本安装和配置"><a href="#2-基本安装和配置" class="headerlink" title="2. 基本安装和配置"></a>2. 基本安装和配置</h3><p>&emsp;&emsp;这一部分阅读后了解activemq在windows和linux下的安装和基本配置。<br>&emsp;&emsp;<strong>windows下activemq的安装</strong><br>&emsp;&emsp;1.到官网<a href="http://activemq.apache.org/download.html" target="_blank" rel="external">下载activemq</a>，windows下下载zip包，linux下下载gz包，这里下载的是5.15.0的版本。<br>&emsp;&emsp;2.解压到任意目录，但是看官网说如果文件路径过长可能会有问题，为求稳妥，目录不要放的过深。<br>&emsp;&emsp;3.到activimq解压目录下的bin目录中的win64去运行activemq.bat(我的电脑是win7 64位)，直接运行bin目录下的activemq.bat我的会直接闪退,注意activemq的启动需要jdk的环境。<br>&emsp;&emsp;4.启动成功后，在浏览器中输入:<a href="http://localhost:8161/admin/" target="_blank" rel="external">http://localhost:8161/admin/</a> 打开activemq的管控台，用户名和密码默认都是admin，登陆进去后可看到管控界面。<br>&emsp;&emsp;<strong>windows下activemq的简单配置</strong><br>&emsp;&emsp;1.管控台密码配置，也就是上面输入的admin<br>&emsp;&emsp;&emsp;&emsp;在安装目录下的<code>conf/jetty.xml</code>中有如下内容<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"securityConstraint"</span> <span class="attr">class</span>=<span class="string">"org.eclipse.jetty.util.security.Constraint"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"BASIC"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"roles"</span> <span class="attr">value</span>=<span class="string">"admin"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"authenticate"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div></pre></td></tr></table></figure></p><p>&emsp;&emsp;&emsp;&emsp;确保 authenticate 的值为true(默认就为true)<br>&emsp;&emsp;&emsp;&emsp;控制台的登录用户名密码保存在<code>conf/jetty-realm.properties</code>文件中,内容如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># Defines users that can access the web (console, demo, etc.)</div><div class="line"># username: password [,rolename ...]</div><div class="line">#用户名 : 密码 ,角色名</div><div class="line">admin: newpwd, admin</div></pre></td></tr></table></figure></p><p>&emsp;&emsp;2.安全配置（消息安全）<br>&emsp;&emsp;&emsp;&emsp;ActiveMQ 如果不加入安全机制的话，任何人只要知道消息服务的具体地址(包括 ip，端口，消息地址[队列或者主题地址])，就可以任意的发送、接收消息。关于 ActiveMQ 的安全可以参考官方的<a href="http://activemq.apache.org/security.html" target="_blank" rel="external">安全配置方式</a>,我们这里使用配置简单授权方式:<br>&emsp;&emsp;&emsp;&emsp;在 <code>conf/activemq.xml</code> 文件中在 broker 标签最后加入以下内容即可：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">simpleAuthenticationPlugin</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">users</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">authenticationUser</span> <span class="attr">username</span>=<span class="string">"yourname"</span> <span class="attr">password</span>=<span class="string">"yourpwd"</span> <span class="attr">groups</span>=<span class="string">"users,admins"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">users</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">simpleAuthenticationPlugin</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div></pre></td></tr></table></figure></p><p>&emsp;&emsp;&emsp;&emsp;这里定义用户名为 yourname，密码为 yourpwd，角色为 users,admins,如果这里做了配置，那么在编写客户端创建连接工厂时需要指定用户名和密码，在之后的代码中会注释说明。注意配置了这个之后，浏览器的控制台就无法查看该队列的信息了(我这里是无法查看了)  </p><p>&emsp;&emsp;<strong>linux(CentOS)下activemq的安装</strong><br>&emsp;&emsp;1.到官网<a href="http://activemq.apache.org/download.html" target="_blank" rel="external">下载activemq</a>，windows下下载zip包，linux下下载gz包，这里下载的是5.15.0的版本。<br>&emsp;&emsp;2.将下载的gz包上传至linux系统中，也可以直接在linux的存放目录下直接下载<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget http://59.109.99.40/IXC492c5648ba8654fcfe0e8dd805738eb4/apache//activemq/5.15.1/apache-activemq-5.15.1-bin.tar.gz</div></pre></td></tr></table></figure></p><p>&emsp;&emsp;3.解压安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar -zxvf apache-activemq-5.15.1-bin.tar.gz</div></pre></td></tr></table></figure></p><p>&emsp;&emsp;4.启动执行:进入解压后的目录的bin目录中，如果启动脚本 activemq 没有可执行权限，此时则需要授权，执行如下命令即可:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod 755 ./activemq</div></pre></td></tr></table></figure></p><p>&emsp;&emsp;5.防火墙中打开对应的端口:ActiveMQ 需要用到两个端口,<br>一个是消息通讯的端口（默认为 61616）,<br>一个是管理控制台端口（默认为 8161）可在 <code>conf/jetty.xml</code> 中修改，默认如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"jettyPort"</span> <span class="attr">class</span>=<span class="string">"org.apache.activemq.web.WebConsolePort"</span> <span class="attr">init-method</span>=<span class="string">"start"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- the default port number for the web console --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"host"</span> <span class="attr">value</span>=<span class="string">"0.0.0.0"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"port"</span> <span class="attr">value</span>=<span class="string">"8161"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div></pre></td></tr></table></figure></p><p>&emsp;&emsp;在防火墙中添加端口命令如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /etc/sysconfig/iptables</div></pre></td></tr></table></figure></p><p>&emsp;&emsp;在文件中添加如下配置:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-A INPUT -m state --state NEW -m tcp -p tcp --dport 61616 -j ACCEPT</div><div class="line">-A INPUT -m state --state NEW -m tcp -p tcp --dport 8161 -j ACCEPT</div></pre></td></tr></table></figure></p><p>&emsp;&emsp;重启防火墙，启动ActiveMQ<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">service iptables restart</div><div class="line">./activemq start</div></pre></td></tr></table></figure></p><p>&emsp;&emsp;在浏览器上访问:<a href="http://linux的IP地址:8161" target="_blank" rel="external">http://linux的IP地址:8161</a>  用户名及密码默认都为admin</p><p>&emsp;&emsp;<strong>linux下activemq配置和说明同windows相同</strong><br>&emsp;&emsp;1.管控台密码配置，也就是进入网页管控台时输入的admin<br>&emsp;&emsp;&emsp;&emsp;在安装目录下的<code>conf/jetty.xml</code>中有如下内容<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"securityConstraint"</span> <span class="attr">class</span>=<span class="string">"org.eclipse.jetty.util.security.Constraint"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"BASIC"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"roles"</span> <span class="attr">value</span>=<span class="string">"admin"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"authenticate"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div></pre></td></tr></table></figure></p><p>&emsp;&emsp;&emsp;&emsp;确保 authenticate 的值为true(默认就为true)<br>&emsp;&emsp;&emsp;&emsp;控制台的登录用户名密码保存在<code>conf/jetty-realm.properties</code>文件中,要执行的命令及文件内容如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd ../</div><div class="line">vi conf/jetty-realm.properties</div></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># Defines users that can access the web (console, demo, etc.)</div><div class="line"># username: password [,rolename ...]</div><div class="line">#用户名 : 密码 ,角色名</div><div class="line">admin: newpwd, admin</div></pre></td></tr></table></figure><p>&emsp;&emsp;2.安全配置（消息安全）<br>&emsp;&emsp;&emsp;&emsp;ActiveMQ 如果不加入安全机制的话，任何人只要知道消息服务的具体地址(包括 ip，端口，消息地址[队列或者主题地址])，就可以任意的发送、接收消息。关于 ActiveMQ 的安全可以参考官方的<a href="http://activemq.apache.org/security.html" target="_blank" rel="external">安全配置方式</a>,我们这里使用配置简单授权方式:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi conf/activemq.xml</div></pre></td></tr></table></figure></p><p>  &emsp;&emsp;为了activeMQ的消息安全性在 <code>conf/activemq.xml</code> 文件中的 broker 标签最后加入以下内容后保存退出(按esc键,按shift+:键,输入wq,按enter键)：<br> <figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">simpleAuthenticationPlugin</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">users</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">authenticationUser</span> <span class="attr">username</span>=<span class="string">"yourname"</span> <span class="attr">password</span>=<span class="string">"yourpwd"</span> <span class="attr">groups</span>=<span class="string">"users,admins"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">users</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">simpleAuthenticationPlugin</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div></pre></td></tr></table></figure></p><p> &emsp;&emsp;这里定义用户名为 yourname，密码为 yourpwd，角色为 users,admins,如果这里做了配置，那么在编写客户端创建连接工厂时需要指定用户名和密码，在之后的代码中会注释说明。注意配置了这个之后，浏览器的控制台就无法查看该队列的信息了(我这里是无法查看了)    </p><p> &emsp;&emsp;以上关于ActiveMQ的在windows和linux环境下的安装及简单配置，整理完收工。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-基本了解&quot;&gt;&lt;a href=&quot;#1-基本了解&quot; class=&quot;headerlink&quot; title=&quot;1. 基本了解&quot;&gt;&lt;/a&gt;1. 基本了解&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;这一部分内容主要来源网络，这里整理归纳到博客中，阅读之后对ActiveMq有一个基本的认知和了解。&lt;br&gt; &amp;emsp; &lt;strong&gt;1. ActiveMQ概念&lt;/strong&gt;&lt;br&gt;&amp;emsp;&amp;emsp;ActiveMQ是Apache推出的，一款开源的，完全支持JMS1.1和J2EE 1.4规范的JMSProvider实现的消息中间件（Message Oriented Middleware，MOM）。&lt;br&gt;
    
    </summary>
    
      <category term="java" scheme="https://yangshaoxiang.github.io/categories/java/"/>
    
    
      <category term="中间件" scheme="https://yangshaoxiang.github.io/tags/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
      <category term="ActiveMQ" scheme="https://yangshaoxiang.github.io/tags/ActiveMQ/"/>
    
  </entry>
  
</feed>
